{"version":3,"sources":["App.module.css","componnents/ContactForm/ContactForm.module.css","componnents/ContactForm/ContactForm.js","componnents/ContactList/ContactListItem/ContactListItem.js","componnents/ContactList/ContactList.js","componnents/Filter/Filter.js","App.js","reportWebVitals.js","index.js","componnents/ContactList/ContactListItem/ContactListItem.module.css","componnents/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","onInputValue","e","target","value","setState","onSubmitContact","preventDefault","props","onAddContact","this","onSubmit","className","ContactFormStl","id","uuid4","label","type","onChange","input","buttonSubmit","Component","ContactListItem","contact","onRemove","ContactListItemStl","container","contactInfo","action","onClick","ContactsList","visibleContacts","onRemoveItem","ContactListStl","contactList","map","visibleContact","Filter","filter","onChangeFilter","FilterStl","filterContainer","App","contacts","addContact","some","alert","prevState","removeContact","contactId","getVisibleContacts","toLocaleLowerCase","includes","AppStl","heading","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68fb4e43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2gcHr\",\"heading\":\"App_heading__3h9Yz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__3Qc_s\",\"label\":\"ContactForm_label__cZbr7\",\"input\":\"ContactForm_input__cnkcD\",\"buttonSubmit\":\"ContactForm_buttonSubmit__2r9VY\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid4 } from 'uuid';\nimport ContactFormStl from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    onInputValue = e => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    };\n\n    onSubmitContact = e => {\n        e.preventDefault();\n        const { name, number } = this.state;\n\n        this.props.onAddContact(name, number);\n        this.setState({ name: '', number: '' });\n    };\n\n    render() {\n        const { name, number } = this.state;\n        return (\n            <form\n                onSubmit={this.onSubmitContact}\n                className={ContactFormStl.ContactForm}\n                id={uuid4()}\n            >\n                <label className={ContactFormStl.label}>\n                    Name\n                    <input\n                        type=\"text\"\n                        value={name}\n                        onChange={this.onInputValue}\n                        name=\"name\"\n                        id={uuid4()}\n                        className={ContactFormStl.input}\n                    />\n                </label>\n                <label className={ContactFormStl.label}>\n                    Phone Number\n                    <input\n                        type=\"text\"\n                        value={number}\n                        onChange={this.onInputValue}\n                        name=\"number\"\n                        id={uuid4()}\n                        className={ContactFormStl.input}\n                    />\n                </label>\n                <button type=\"submit\" className={ContactFormStl.buttonSubmit}>\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n\nContactForm.propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport ContactListItemStl from './ContactListItem.module.css';\n\nfunction ContactListItem({ contact, onRemove }) {\n    const { name, number } = contact;\n    return (\n        <>\n            <li className={ContactListItemStl.container}>\n                <div className={ContactListItemStl.contactInfo}>\n                    {name} : {number}\n                </div>\n                <section className={ContactListItemStl.action}>\n                    <button type=\"button\" onClick={onRemove}>\n                        Delete\n                    </button>\n                </section>\n            </li>\n        </>\n    );\n}\nContactListItem.propTypes = {\n    contact: PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }).isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem/ContactListItem';\nimport ContactListStl from './ContactListItem/ContactListItem.module.css';\n\nfunction ContactsList({ visibleContacts, onRemoveItem }) {\n    // console.log(visibleContacts);\n    return (\n        <ul className={ContactListStl.contactList}>\n            {visibleContacts.map(visibleContact => (\n                <ContactListItem\n                    contact={visibleContact}\n                    onRemove={() => onRemoveItem(visibleContact.id)}\n                    key={visibleContact.id}\n                />\n            ))}\n        </ul>\n    );\n}\n\nContactsList.propTypes = {\n    visibleContacts: PropTypes.arrayOf(\n        PropTypes.exact({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }).isRequired,\n    ),\n\n    onRemoveItem: PropTypes.func.isRequired,\n};\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport FilterStl from './Filter.module.css';\n\nfunction Filter({ filter, onChangeFilter }) {\n    return (\n        <div className={FilterStl.filterContainer}>\n            <label className={FilterStl.label}>\n                Find contact by name:\n                <input\n                    type=\"text\"\n                    value={filter}\n                    onChange={onChangeFilter}\n                    name=\"filter\"\n                    className={FilterStl.input}\n                />\n            </label>\n        </div>\n    );\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuid4 } from 'uuid';\nimport ContactForm from './componnents/ContactForm/ContactForm';\nimport ContactsList from './componnents/ContactList/ContactList';\nimport Filter from './componnents/Filter/Filter';\nimport AppStl from './App.module.css';\n\nexport default class App extends Component {\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n    };\n\n    onInputValue = e => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    };\n\n    addContact = (name, number) => {\n        if (this.state.contacts.some(contact => contact.name === name)) {\n            alert(`${name} is already in Contacts`);\n            return;\n        }\n        const contact = {\n            id: uuid4(),\n            name,\n            number,\n        };\n        this.setState(prevState => {\n            return { contacts: [...prevState.contacts, contact] };\n        });\n    };\n\n    removeContact = contactId => {\n        this.setState(prevState => {\n            return {\n                contacts: prevState.contacts.filter(\n                    ({ id }) => id !== contactId,\n                ),\n            };\n        });\n    };\n\n    getVisibleContacts = () => {\n        const { contacts, filter } = this.state;\n        return contacts.filter(contact =>\n            contact.name\n                .toLocaleLowerCase()\n                .includes(filter.toLocaleLowerCase()),\n        );\n    };\n\n    render() {\n        const { contacts, filter } = this.state;\n        const visibleContacts = this.getVisibleContacts();\n\n        return (\n            <div className={AppStl.container}>\n                <h2 className={AppStl.heading}>PhoneBook</h2>\n\n                <ContactForm onAddContact={this.addContact} />\n\n                <h2 className={AppStl.heading}>Contacts</h2>\n\n                {contacts.length > 1 && (\n                    <Filter\n                        filter={filter}\n                        onChangeFilter={this.onInputValue}\n                    />\n                )}\n\n                {contacts.length > 0 && (\n                    <ContactsList\n                        visibleContacts={visibleContacts}\n                        onRemoveItem={this.removeContact}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactListItem_container__1NlaU\",\"contactInfo\":\"ContactListItem_contactInfo__2H9jk\",\"action\":\"ContactListItem_action__3R3Nx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__X-ZPm\",\"input\":\"Filter_input__1G12s\"};"],"sourceRoot":""}